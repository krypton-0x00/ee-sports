version: "3.8"

services:
  # Zookeeper service - required for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - ee-network

  # Kafka service
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - ee-network

  # Kafka UI for monitoring
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
    depends_on:
      - kafka
    networks:
      - ee-network

  # Postgres Database for User Service
  user-db:
    image: postgres:13
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: ee_user
      POSTGRES_PASSWORD: ee_password
    ports:
      - "5431:5432"
    volumes:
      - user-db-data:/var/lib/postgresql/data
    networks:
      - ee-network

  # Postgres Database for Tournament Service
  # tournament-db:
  #   image: postgres:13
  #   environment:
  #     POSTGRES_DB: tournament_db
  #     POSTGRES_USER: ee_tournament
  #     POSTGRES_PASSWORD: ee_tournament_password
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - tournament-db-data:/var/lib/postgresql/data
  #   networks:
  #     - ee-network

  # API Gateway Service
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - PORT=3000
    networks:
      - ee-network

  # Auth Service
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    depends_on:
      - user-db
      - kafka
    environment:
      - DATABASE_URL=postgresql://ee_user:ee_password@user-db:5432/user_db
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - PORT=3001
    networks:
      - ee-network
# tournament-service:
#   build:
#     context: ./tournament-service
#     dockerfile: Dockerfile
#   depends_on:
#     - tournament-db
#     - kafka
#   environment:
#     - DATABASE_URL=postgresql://ee_tournament:ee_tournament_password@tournament-db:5432/tournament_db
#     - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
#   networks:
#     - ee-network

# Define networks
networks:
  ee-network:
    driver: bridge

# Define volumes for persistent data
volumes:
  user-db-data:
  # tournament-db-data:
